plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Dependencies 
    implementation "org.springframework:spring-core:6.2.8"  
    implementation 'org.springframework:spring-context:6.2.8'
    implementation 'org.springframework:spring-orm:6.2.8'
    implementation 'org.springframework:spring-tx:6.2.8'
    implementation 'org.springframework:spring-test:6.2.8'
    
    // JPA Dependencies
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'
    
    // Database Dependencies
    implementation 'com.h2database:h2:2.2.224'
    implementation 'org.springframework:spring-jdbc:6.2.8'
    
    // AssertJ for testing  
    testImplementation "org.assertj:assertj-core:3.11.1"    
        
    // JUnit Jupiter API for writing tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.0'
    
    // Mockito for testing
    testImplementation 'org.mockito:mockito-core:5.+'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.+'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
