<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.dao.PurchaseDaoImplTests" tests="3" skipped="0" failures="0" errors="0" timestamp="2025-08-09T07:22:37.283Z" hostname="Mac.attlocal.net" time="0.391">
  <properties/>
  <testcase name="testSaveAndFind()" classname="com.example.dao.PurchaseDaoImplTests" time="0.273"/>
  <testcase name="findAllPurchases()" classname="com.example.dao.PurchaseDaoImplTests" time="0.114"/>
  <testcase name="getPurchase()" classname="com.example.dao.PurchaseDaoImplTests" time="0.004"/>
  <system-out><![CDATA[Hibernate: 
    select
        c1_0.id,
        c1_0.CUSTOMER_NAME 
    from
        CUSTOMERS c1_0 
    where
        c1_0.id=?
Hibernate: 
    /* insert for
        com.example.domain.Purchase */insert 
    into
        PURCHASES (CUSTOMER_ID, PRODUCT, PURCHASE_DATE, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    select
        p1_0.id,
        c1_0.id,
        c1_0.CUSTOMER_NAME,
        p1_0.PRODUCT,
        p1_0.PURCHASE_DATE 
    from
        PURCHASES p1_0 
    left join
        CUSTOMERS c1_0 
            on c1_0.id=p1_0.CUSTOMER_ID 
    where
        p1_0.id=?
Hibernate: 
    /* SELECT
        p 
    FROM
        Purchase p */ select
            p1_0.id,
            p1_0.CUSTOMER_ID,
            p1_0.PRODUCT,
            p1_0.PURCHASE_DATE 
        from
            PURCHASES p1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.CUSTOMER_NAME 
    from
        CUSTOMERS c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.CUSTOMER_NAME 
    from
        CUSTOMERS c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.CUSTOMER_NAME 
    from
        CUSTOMERS c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        p1_0.id,
        c1_0.id,
        c1_0.CUSTOMER_NAME,
        p1_0.PRODUCT,
        p1_0.PURCHASE_DATE 
    from
        PURCHASES p1_0 
    left join
        CUSTOMERS c1_0 
            on c1_0.id=p1_0.CUSTOMER_ID 
    where
        p1_0.id=?
]]></system-out>
  <system-err><![CDATA[Aug 09, 2025 3:22:36 AM org.hibernate.jpa.internal.util.LogHelper logPersistenceUnitInformation
INFO: HHH000204: Processing PersistenceUnitInfo [name: default]
Aug 09, 2025 3:22:36 AM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate ORM core version 6.4.4.Final
Aug 09, 2025 3:22:36 AM org.hibernate.cache.internal.RegionFactoryInitiator initiateService
INFO: HHH000026: Second-level cache disabled
Aug 09, 2025 3:22:36 AM org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo addTransformer
INFO: No LoadTimeWeaver setup: ignoring JPA class transformer
Aug 09, 2025 3:22:37 AM org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl constructDialect
WARN: HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
Aug 09, 2025 3:22:37 AM org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator initiateService
INFO: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Aug 09, 2025 3:22:37 AM org.springframework.orm.jpa.AbstractEntityManagerFactoryBean buildNativeEntityManagerFactory
INFO: Initialized JPA EntityManagerFactory for persistence unit 'default'
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build as described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org.mockito/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (/Users/allenroman/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.17.5/58f9507f5f28d1d3e7adfb4ec2fe37c29d332c9b/byte-buddy-agent-1.17.5.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
