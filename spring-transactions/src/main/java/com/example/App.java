/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import com.example.service.PurchaseService;
import com.example.service.Register;

import java.util.Date;

public class App {

    public static void main(String[] args) {
        System.out.println("spring-transactions app is starting...");
        ApplicationContext spring = new AnnotationConfigApplicationContext(Config.class);
        
        // Demonstrate original register functionality
        Register register = spring.getBean(com.example.service.Register.class);
        double total = register.computeTotal(100.00);
        System.out.println("Tax calculation - Total: " + total);
        
        // Demonstrate transaction management features
        PurchaseService purchaseService = spring.getBean(PurchaseService.class);
        
        System.out.println("\n--- Demonstrating Transaction Management ---");
        
        // Create and save a purchase
        Purchase purchase1 = new Purchase("Alice Johnson", new Date(), "laptop");
        purchaseService.savePurchase(purchase1);
        System.out.println("Saved purchase: " + purchase1);
        
        // Find the saved purchase
        Purchase found = purchaseService.findPurchase("Alice Johnson", purchase1.getPurchaseDate());
        System.out.println("Found purchase: " + found);
        
        // Save another purchase to show transactional behavior
        Purchase purchase2 = new Purchase("Bob Smith", new Date(), "smartphone");
        purchaseService.savePurchase(purchase2);
        System.out.println("Saved purchase: " + purchase2);
        
        // Find the second purchase
        Purchase found2 = purchaseService.findPurchase("Bob Smith", purchase2.getPurchaseDate());
        System.out.println("Found purchase: " + found2);
        
        System.out.println("\nTransaction management demonstration completed!");
        System.out.println("The PurchaseService uses @Transactional with REQUIRES_NEW propagation for savePurchase()");
    }
}
