/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import com.example.service.Register;
import com.example.dao.PurchaseDao;
import com.example.dao.Purchase;

public class App {

    public static void main(String[] args) {
        System.out.println("Spring AOP Demo Application Starting...");
        System.out.println("==========================================");
        
        ApplicationContext spring = new AnnotationConfigApplicationContext(Config.class);
        
        // Demonstrate tax calculation with AOP logging
        System.out.println("\n1. Tax Calculation Demo:");
        Register register = spring.getBean(Register.class);
        double total1 = register.computeTotal(100.00);
        double total2 = register.computeTotal(250.50);
        System.out.println("Total for $100.00: $" + total1);
        System.out.println("Total for $250.50: $" + total2);
        
        // Demonstrate purchase management with AOP logging
        System.out.println("\n2. Purchase Management Demo (with AOP logging):");
        PurchaseDao purchaseDao = spring.getBean(PurchaseDao.class);
        
        // These method calls will trigger the LoggingAspect
        Purchase purchase1 = purchaseDao.getPurchase(1);
        Purchase purchase2 = purchaseDao.getPurchase(2);
        System.out.println("Retrieved: " + purchase1.getDescription() + " - $" + purchase1.getAmount());
        System.out.println("Retrieved: " + purchase2.getDescription() + " - $" + purchase2.getAmount());
        
        // Add a new purchase
        Purchase newPurchase = new Purchase(3, "New Purchase Demo", 75.25);
        purchaseDao.savePurchase(newPurchase);
        System.out.println("Added new purchase: " + newPurchase.getDescription());
        
        // Retrieve all purchases (triggers logging aspect)
        System.out.println("\nAll purchases:");
        purchaseDao.getAllPurchases().forEach(p -> 
            System.out.println("  ID: " + p.getId() + ", " + p.getDescription() + " - $" + p.getAmount())
        );
        
        System.out.println("\n==========================================");
        System.out.println("Spring AOP Demo Complete!");
        System.out.println("Features demonstrated:");
        System.out.println("- Dependency Injection");
        System.out.println("- Tax calculation with different strategies");
        System.out.println("- AOP logging aspect (before method execution)");
        System.out.println("- Purchase data access layer");
    }
}
